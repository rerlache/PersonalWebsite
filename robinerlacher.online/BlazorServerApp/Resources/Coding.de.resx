<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="S1C1Body" xml:space="preserve">
    <value>&lt;ul&gt;
                            &lt;li&gt;- Basics&lt;/li&gt;
                            &lt;li&gt;- Entity Framework&lt;/li&gt;
                            &lt;li&gt;- Xamarin&lt;/li&gt;
                            &lt;li&gt;- Blazor/Razor&lt;/li&gt;
                            &lt;li&gt;- WebAPI&lt;/li&gt;
                        &lt;/ul&gt;</value>
  </data>
  <data name="S1C1Title" xml:space="preserve">
    <value>C# / ASP.NET</value>
  </data>
  <data name="S1C2Body" xml:space="preserve">
    <value>Um mir das Leben zu vereinfachen, habe ich mir einige komplexe Scripte geschrieben. Hauptsächlich zur Verwaltung unseres Active Directory und Exchange Systems. Aber auch ein paar SharePoint Scripte.</value>
  </data>
  <data name="S1C2Title" xml:space="preserve">
    <value>PowerShell</value>
  </data>
  <data name="S1C3Body" xml:space="preserve">
    <value>Seit SharePoint 2007 bin ich Hauptverantwortlich für unsere SharePoint Systeme. Ich habe Inhalte von Sharepoint 2007 auf 2010, dann auf 2016 und jetzt langsam richtung Sharepoint Online migriert.</value>
  </data>
  <data name="S1C3Title" xml:space="preserve">
    <value>SharePoint</value>
  </data>
  <data name="S1C4Body" xml:space="preserve">
    <value>Dank CRM und meines C# Kurses konnte ich meine SQL Fähigkeiten und Wissen erweitern. Dies wird weiterhin dank diverser privater C# Projekte der Fall sein.</value>
  </data>
  <data name="S1C4Title" xml:space="preserve">
    <value>SQL</value>
  </data>
  <data name="S1C5Body" xml:space="preserve">
    <value>Hauptsächlich verwende ich Git und Github für meine &lt;a href="https://github.com/rerlache" target="_blank"&gt;persönlichen Projekte&lt;/a&gt; und den Developer Kurs. Bis jetzt habe ich leider noch nicht in einem Team und/oder mit Branches gearbeitet.</value>
  </data>
  <data name="S1C5Title" xml:space="preserve">
    <value>Git und Github</value>
  </data>
  <data name="S1C6Body" xml:space="preserve">
    <value>Kennengelernt hab ich SCRUM mit meinem Abteilungswechsel. Ich geniesse die Arbeit mit diesem Framwork, da man sich persönlich und das ganze Team sich von Sprint zu Sprint verbessert.</value>
  </data>
  <data name="S1C6Title" xml:space="preserve">
    <value>SCRUM</value>
  </data>
  <data name="S1C7Body" xml:space="preserve">
    <value>Wohl etwas eingerostet, da ich das leider schon lange nichtmehr angewendet habe.</value>
  </data>
  <data name="S1C7Title" xml:space="preserve">
    <value>HTML und CSS</value>
  </data>
  <data name="S2C1Body" xml:space="preserve">
    <value>Ich bin mit Windows aufgewachsen, seit Windows 95 kein anderes OS verwendet. Übersprungen wurden Vista und Windows 8.</value>
  </data>
  <data name="S2C2Body" xml:space="preserve">
    <value>Linux Erfahrung konnte ich mit unserem lokalen Trac &amp; SVN Server (Apache + SVN Plugin) sammeln. Hierfür habe ich dann auch Halbautomatische Skripte geschrieben um das zu vereinfachen.</value>
  </data>
  <data name="S2C3Body" xml:space="preserve">
    <value>&lt;ul&gt;
                            &lt;li&gt;- 2007&lt;/li&gt;
                            &lt;li&gt;- 2010&lt;/li&gt;
                            &lt;li&gt;- 2016&lt;/li&gt;
                            &lt;li&gt;- Online&lt;/li&gt;
                        &lt;/ul&gt;</value>
  </data>
  <data name="S2C4Body" xml:space="preserve">
    <value>WebGUI und Powershell kenne ich auf Onpremise und Online Basis. Um mir das leben zu vereinfachen, habe ich einige PS Skripte geschrieben.</value>
  </data>
  <data name="S2C5Body" xml:space="preserve">
    <value>Die AD habe ich mit der GUI und Powershell verwaltet. Um Aufgaben einfacher zu machen, auch hier einige Skripte geschrieben.</value>
  </data>
  <data name="S2C6Body" xml:space="preserve">
    <value>Used the PowerPlatform for a few Projects to make processes better, more modern and more automated. Mainly used PowerApps and Automate in combination with SharePoint and Dataverse.</value>
  </data>
  <data name="S2C7Body" xml:space="preserve">
    <value>Did mainly Support tasks for our CRM System, but also some Processes, Form and Backend changes.</value>
  </data>
  <data name="S2C8Body" xml:space="preserve">
    <value>As work moves more and more towards the cloud, the need of Azure know-how is mandatory. So my Azure knowledge is growing day by day.</value>
  </data>
  <data name="S2C9Body" xml:space="preserve">
    <value>Operational and Usage. As i'm responsable for our organization projects, i know the operational part and as we work with SCRUM i also know a bit of the Usage part.</value>
  </data>
  <data name="SectionHeader1" xml:space="preserve">
    <value>Frameworks, Technologien und Konzepte mit denen ich vertraut bin</value>
  </data>
  <data name="SectionHeader2" xml:space="preserve">
    <value>System Portfolio</value>
  </data>
</root>